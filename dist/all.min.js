var A="";const t=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]),e=4;function n(A){return function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let n=e(),r=1,o=[0,1];for(let A=1;A<n;A++)o.push(r+=e());let s=e(),l=t;t+=s;let w=0,a=0;function f(){return 0==w&&(a=a<<8|A[t++],w=8),a>>--w&1}const i=2**31,c=i>>>1,p=c>>1,g=i-1;let Q=0;for(let A=0;A<31;A++)Q=Q<<1|f();let B=[],C=0,u=i;for(;;){let A=Math.floor(((Q-C+1)*r-1)/u),t=0,e=n;for(;e-t>1;){let n=t+e>>>1;A<o[n]?e=n:t=n}if(0==t)break;B.push(t);let s=C+Math.floor(u*o[t]/r),l=C+Math.floor(u*o[t+1]/r)-1;for(;!((s^l)&c);)Q=Q<<1&g|f(),s=s<<1&g,l=l<<1&g|1;for(;s&~l&p;)Q=Q&c|Q<<1&g>>>1|f(),s=s<<1^c,l=(l^c)<<1|c|1;C=s,u=1+l-s}let E=n-4;return B.map((t=>{switch(t-E){case 3:return E+65792+(A[l++]<<16|A[l++]<<8|A[l++]);case 2:return E+256+(A[l++]<<8|A[l++]);case 1:return E+A[l++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,n=new Uint8Array(6*e>>3);for(let r=0,o=0,s=0,l=0;r<e;r++)l=l<<6|t[A.charCodeAt(r)],s+=6,s>=8&&(n[o++]=l>>(s-=8));return n}(A)))}function r(A){return 1&A?~A>>1:A>>1}function o(A,t){let e=Array(A);for(let n=0,o=0;n<A;n++)e[n]=o+=r(t());return e}function s(A,t=0){let e=[];for(;;){let n=A(),r=A();if(!r)break;t+=n;for(let A=0;A<r;A++)e.push(t+A);t+=r+1}return e}function l(A){return a((()=>{let t=s(A);if(t.length)return t}))}function w(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(i(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(c(e,A))}return t.flat()}function a(A){let t=[];for(;;){let e=A(t.length);if(!e)break;t.push(e)}return t}function f(A,t,e){let n=Array(A).fill().map((()=>[]));for(let r=0;r<t;r++)o(A,e).forEach(((A,t)=>n[t].push(A)));return n}function i(A,t){let e=1+t(),n=t(),r=a(t);return f(r.length,1+A,t).flatMap(((A,t)=>{let[o,...s]=A;return Array(r[t]).fill().map(((A,t)=>{let r=t*n;return[o+t*e,s.map((A=>A+r))]}))}))}function c(A,t){return f(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}function p(A){return A.toString(16).toUpperCase().padStart(2,"0")}function g(A){return`{${p(A)}}`}function Q(A){let t=[];for(let e=0,n=A.length;e<n;){let n=A.codePointAt(e);e+=n<65536?1:2,t.push(n)}return t}function B(A){let t=A.length;if(t<4096)return String.fromCodePoint(...A);let e=[];for(let n=0;n<t;)e.push(String.fromCodePoint(...A.slice(n,n+=4096)));return e.join("")}function C(A,t){let e=A.length,n=e-t.length;for(let r=0;0==n&&r<e;r++)n=A[r]-t[r];return n}function u(A,t=Math.random){return A[t()*A.length|0]}function E(A,t,e=Math.random){if((A=A.slice()).length>t){for(let n=0;n<t;n++){let t=A[n],r=Math.floor(n+e()*(A.length-n));A[n]=A[r],A[r]=t}A=A.slice(0,t)}return A}function d(A,t,e){let n=0;for(;;){let r=A.indexOf(t,n);if(r<0)break;A[r]=e,n=r+1}}function h(A,t){let e=[];for(let n of t){let{name:t,norm:r,error:o}=n;"string"!=typeof r&&(r=t);try{let s=A(t);o?e.push({type:"expected error",result:s,...n}):s!=r&&e.push({type:"wrong norm",result:s,...n})}catch(A){o||e.push({type:"unexpected error",result:A.message,...n})}}return e}var D="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";const b=44032,M=4352,x=4449,F=4519,m=28,k=21*m,H=b+19*k,y=M+19,K=x+21,J=F+m;function L(A){return A>>24&255}function G(A){return 16777215&A}let I,V,R,T;function P(A){return A>=b&&A<H}function U(A,t){if(A>=M&&A<y&&t>=x&&t<K)return b+(A-M)*k+(t-x)*m;if(P(A)&&t>F&&t<J&&(A-b)%m==0)return A+(t-F);{let e=T.get(A);return e&&(e=e.get(t),e)?e:-1}}function S(A){I||function(){let A=n(D);I=new Map(l(A).flatMap(((A,t)=>A.map((A=>[A,t+1<<24]))))),V=new Set(s(A)),R=new Map,T=new Map;for(let[t,e]of w(A)){if(!V.has(t)&&2==e.length){let[A,n]=e,r=T.get(A);r||(r=new Map,T.set(A,r)),r.set(n,t)}R.set(t,e.reverse())}}();let t=[],e=[],r=!1;function o(A){let e=I.get(A);e&&(r=!0,A|=e),t.push(A)}for(let n of A)for(;;){if(n<128)t.push(n);else if(P(n)){let A=n-b,t=A%k/m|0,e=A%m;o(M+(A/k|0)),o(x+t),e>0&&o(F+e)}else{let A=R.get(n);A?e.push(...A):o(n)}if(!e.length)break;n=e.pop()}if(r&&t.length>1){let A=L(t[0]);for(let e=1;e<t.length;e++){let n=L(t[e]);if(0==n||A<=n){A=n;continue}let r=e-1;for(;;){let e=t[r+1];if(t[r+1]=t[r],t[r]=e,!r)break;if(A=L(t[--r]),A<=n)break}A=L(t[e])}}return t}function Y(A){return S(A).map(G)}function j(A){return function(A){let t=[],e=[],n=-1,r=0;for(let o of A){let A=L(o),s=G(o);if(-1==n)0==A?n=s:t.push(s);else if(r>0&&r>=A)0==A?(t.push(n,...e),e.length=0,n=s):e.push(s),r=A;else{let o=U(n,s);o>=0?n=o:0==r&&0==A?(t.push(n),n=s):(e.push(s),r=A)}}return n>=0&&t.push(n,...e),t}(S(A))}const N=45,W=".",O=65039,Z=1,v=A=>Array.from(A);function z(A,t){return A.P.has(t)||A.Q.has(t)}class X extends Array{get is_emoji(){return!0}}let q,$,_,AA,tA,eA,nA,rA,oA,sA,lA,wA;function aA(){if(q)return;let t=n(A);const e=()=>s(t),r=()=>new Set(e()),o=(A,t)=>t.forEach((t=>A.add(t)));q=new Map(w(t)),$=r(),_=e(),AA=new Set(e().map((A=>_[A]))),_=new Set(_),tA=r(),eA=r();let f=l(t),i=t();const c=()=>{let A=new Set;return e().forEach((t=>o(A,f[t]))),o(A,e()),A};nA=a((A=>{let e=a(t).map((A=>A+96));if(e.length){let n=A>=i;return e[0]-=32,e=B(e),n&&(e=`Restricted[${e}]`),{N:e,P:c(),Q:c(),M:!t(),R:n}}})),rA=r(),oA=new Map;let p=e().concat(v(rA)).sort(((A,t)=>A-t));p.forEach(((A,e)=>{let n=t(),r=p[e]=n?p[e-n]:{V:[],M:new Map};r.V.push(A),rA.has(A)||oA.set(A,r)}));for(let{V:A,M:t}of new Set(oA.values())){let e=[];for(let t of A){let A=nA.filter((A=>z(A,t))),n=e.find((({G:t})=>A.some((A=>t.has(A)))));n||(n={G:new Set,V:[]},e.push(n)),n.V.push(t),o(n.G,A)}let n=e.flatMap((A=>v(A.G)));for(let{G:A,V:r}of e){let e=new Set(n.filter((t=>!A.has(t))));for(let A of r)t.set(A,e)}}sA=new Set;let g=new Set;const Q=A=>sA.has(A)?g.add(A):sA.add(A);for(let A of nA){for(let t of A.P)Q(t);for(let t of A.Q)Q(t)}for(let A of sA)oA.has(A)||g.has(A)||oA.set(A,Z);o(sA,Y(sA)),lA=function(A){let t=[],e=s(A);return function A({S:e,B:n},r,o){if(!(4&e&&o===r[r.length-1])){2&e&&(o=r[r.length-1]),1&e&&t.push(r);for(let t of n)for(let e of t.Q)A(t,[...r,e],o)}}(function t(n){return{S:A(),B:a((()=>{let n=s(A).map((A=>e[A]));if(n.length)return t(n)})),Q:n}}([]),[]),t}(t).map((A=>X.from(A))).sort(C),wA=new Map;for(let A of lA){let t=[wA];for(let e of A){let A=t.map((A=>{let t=A.get(e);return t||(t=new Map,A.set(e,t)),t}));e===O?t.push(...A):t=A}for(let e of t)e.V=A}}function fA(A){return(gA(A)?"":`${iA(cA([A]))} `)+g(A)}function iA(A){return`"${A}"‎`}function cA(A,t=1/0,e=g){let n=[];pA(A[0])&&n.push("◌"),A.length>t&&(t>>=1,A=[...A.slice(0,t),8230,...A.slice(-t)]);let r=0,o=A.length;for(let t=0;t<o;t++){let o=A[t];gA(o)&&(n.push(B(A.slice(r,t))),n.push(e(o)),r=t+1)}return n.push(B(A.slice(r,o))),n.join("")}function pA(A,t){return aA(),t?AA.has(A):_.has(A)}function gA(A){return aA(),tA.has(A)}function QA(){return aA(),lA.map((A=>A.slice()))}function BA(A,t){aA();let e=t?Y:j;return A.split(W).map((A=>B(xA(Q(A),e,FA).flat()))).join(W)}function CA(A){return hA(dA(A,j,FA))}function uA(A){let t=dA(A,j,(A=>A));for(let{type:A,output:e,error:n}of t){if(n)break;"Greek"!==A&&d(e,958,926)}return hA(t)}function EA(A,t){return dA(A,j,t?A=>A.slice():FA)}function dA(A,n,r){if(!A)return[];aA();let o=0;return A.split(W).map((A=>{let s=Q(A),l={input:s,offset:o};o+=s.length+1;try{let A,o=l.tokens=xA(s,n,r),w=o.length;if(!w)throw new Error("empty label");let a=l.output=o.flat();if(function(A){for(let t=A.lastIndexOf(95);t>0;)if(95!==A[--t])throw new Error("underscore allowed only at start")}(a),!(l.emoji=w>1||o[0].is_emoji)&&a.every((A=>A<128)))!function(A){if(A.length>=4&&A[2]==N&&A[3]==N)throw new Error(`invalid label extension: "${B(A.slice(0,4))}"`)}(a),A="ASCII";else{let n=o.flatMap((A=>A.is_emoji?[]:A));if(n.length){if(_.has(a[0]))throw MA("leading combining mark");for(let A=1;A<w;A++){let t=o[A];if(!t.is_emoji&&_.has(t[0]))throw MA(`emoji + combining mark: "${B(o[A-1])} + ${cA([t[0]])}"`)}!function(A){let e=A[0],n=t.get(e);if(n)throw MA(`leading ${n}`);let r=A.length,o=-1;for(let s=1;s<r;s++){e=A[s];let r=t.get(e);if(r){if(o==s)throw MA(`${n} + ${r}`);o=s+1,n=r}}if(o==r)throw MA(`trailing ${n}`)}(a);let r=v(new Set(n)),[s]=function(A){let t=nA;for(let e of A){let A=t.filter((A=>z(A,e)));if(!A.length)throw nA.some((A=>z(A,e)))?bA(t[0],e):DA(e);if(t=A,1==A.length)break}return t}(r);!function(A,t){for(let e of t)if(!z(A,e))throw bA(A,e);if(A.M){let A=Y(t);for(let t=1,n=A.length;t<n;t++)if(AA.has(A[t])){let r=t+1;for(let e;r<n&&AA.has(e=A[r]);r++)for(let n=t;n<r;n++)if(A[n]==e)throw new Error(`duplicate non-spacing marks: ${fA(e)}`);if(r-t>e)throw new Error(`excessive non-spacing marks: ${iA(cA(A.slice(t-1,r)))} (${r-t}/${e})`);t=r}}}(s,n),function(A,t){let e,n=[];for(let A of t){let t=oA.get(A);if(t===Z)return;if(t){let n=t.M.get(A);if(e=e?e.filter((A=>n.has(A))):v(n),!e.length)return}else n.push(A)}if(e)for(let t of e)if(n.every((A=>z(t,A))))throw new Error(`whole-script confusable: ${A.N}/${t.N}`)}(s,r),A=s.N}else A="Emoji"}l.type=A}catch(A){l.error=A}return l}))}function hA(A){return A.map((({input:t,error:e,output:n})=>{if(e){let n=e.message;throw new Error(1==A.length?n:`Invalid label ${iA(cA(t,63))}: ${n}`)}return B(n)})).join(W)}function DA(A){return new Error(`disallowed character: ${fA(A)}`)}function bA(A,t){let e=fA(t),n=nA.find((A=>A.P.has(t)));return n&&(e=`${n.N} ${e}`),new Error(`illegal mixture: ${A.N} + ${e}`)}function MA(A){return new Error(`illegal placement: ${A}`)}function xA(A,t,e){let n=[],r=[];for(A=A.slice().reverse();A.length;){let o=mA(A);if(o)r.length&&(n.push(t(r)),r=[]),n.push(e(o));else{let t=A.pop();if(sA.has(t))r.push(t);else{let A=q.get(t);if(A)r.push(...A);else if(!$.has(t))throw DA(t)}}}return r.length&&n.push(t(r)),n}function FA(A){return A.filter((A=>A!=O))}function mA(A,t){let e,n=wA,r=A.length;for(;r&&(n=n.get(A[--r]),n);){let{V:o}=n;o&&(e=o,t&&t.push(...A.slice(r).reverse()),A.length=r)}return e}const kA="valid",HA="mapped",yA="ignored";function KA(A,{nf:t=!0}={}){aA();let e=Q(A).reverse(),n=[],r=[];for(;e.length;){let A=mA(e,n);if(A)r.push({type:"emoji",emoji:A.slice(),input:n,cps:FA(A)}),n=[];else{let A=e.pop();if(46==A)r.push({type:"stop",cp:A});else if(sA.has(A))r.push({type:kA,cps:[A]});else if($.has(A))r.push({type:yA,cp:A});else{let t=q.get(A);t?r.push({type:HA,cp:A,cps:t.slice()}):r.push({type:"disallowed",cp:A})}}}if(t)for(let A=0,t=-1;A<r.length;A++){let e=r[A];if(JA(e.type))if(LA(e.cps)){let e=A+1;for(let A=e;A<r.length;A++){let{type:t,cps:n}=r[A];if(JA(t)){if(!LA(n))break;e=A+1}else if(t!==yA)break}t<0&&(t=A);let n=r.slice(t,e),o=n.flatMap((A=>JA(A.type)?A.cps:[])),s=j(o);C(s,o)?(r.splice(t,e-t,{type:"nfc",input:o,cps:s,tokens0:GA(n),tokens:KA(B(s),{nf:!1})}),A=t):A=e-1,t=-1}else t=A;else e.type!==yA&&(t=-1)}return GA(r)}function JA(A){return A==kA||A==HA}function LA(A){return A.some((A=>eA.has(A)))}function GA(A){for(let t=0;t<A.length;t++)if(A[t].type==kA){let e=t+1;for(;e<A.length&&A[e].type==kA;)e++;A.splice(t,e-t,{type:kA,cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}function IA(A){return document.createElement(A)}function VA(A){return A.map(p).join(" ")}function RA(){let A=IA("span");return A.classList.add("arrow"),A.innerHTML="➔",A}function TA(A,t){let e=IA("span");return 8205==A?(e.classList.add("mod","zwj"),e.innerText="ZWJ"):8204==A?(e.classList.add("mod","zwj"),e.innerText="ZWNJ"):65039==A?(e.classList.add("mod","dropped","style"),e.innerText="FE0F"):8419==A?(e.classList.add("mod","keycap"),e.innerText="Keycap"):A>=917537&&A<=917630?(e.classList.add("mod","tag"),e.innerText=String.fromCodePoint(A-917504)):917631==A?(e.classList.add("mod","tag","end"),e.innerText="⌫"):!t&&gA(A)?(e.classList.add("code"),e.innerText=p(A)):e.innerText=cA([A]),e}function PA(A,t){let e=Object.entries(A).map((([A,t])=>`${A}: ${t}`));return Array.isArray(t)&&e.push(...t),e.join("\n")}function UA(A,{before:t,components:e,emoji:n,tld:r,extra:o=()=>{}}={}){let s=IA("div");return s.classList.add("tokens"),s.append(...A.map(((s,l)=>{let w;switch(s.type){case"emoji":{w=IA("a"),n&&n(w,s);let A=t?s.input:s.cps;e&&A.length>1?(w.dataset.components="1",w.append(...A.map((A=>TA(A,!0))))):w.innerText=String.fromCodePoint(...s.emoji),w.title=PA({Type:"Emoji",Hex:VA(A),Beautified:VA(s.emoji)},o(s.type,A));break}case"nfc":{w=IA("div");let A=s.tokens0.flatMap((A=>"valid"===A.type?A.cps:A.cp)),r=UA(s.tokens0.flatMap((A=>"valid"===A.type?A.cps.map((A=>({type:"valid",cps:[A]}))):A)),{components:e,before:t,emoji:n,extra:o});if(r.title=PA({Type:"NFC (Unnormalized)",Hex:VA(A)},o(s.type,A)),w.append(r),!t){let A=UA(s.tokens,{components:e,emoji:n,extra:o});A.title=PA({Type:"NFC (Normalized)",Hex:VA(s.cps)},o(s.type,s.cps)),w.append(RA(),A)}break}case"valid":{w=IA("span");let t=cA(s.cps);!r||l!==A.length-1||l&&"stop"!==A[l-1].type||!/^[a-z]+$/.test(t)||(w.dataset.tld=t),w.innerText=t,w.title=PA({Type:"Valid",Hex:VA(s.cps)},o(s.type,s.cps));break}case"mapped":{w=IA("div");let A=IA("span");if(A.classList.add("before"),A.innerText=cA([s.cp]),A.title=PA({Type:"Mapped (Match)",Hex:p(s.cp)},o(s.type,[s.cp])),w.append(A),!t){let A=IA("span");A.innerText=s.cps.map((A=>cA([A]))).join("​"),A.title=PA({Type:"Mapped (Replacement)",Hex:VA(s.cps)},o(s.type,s.cps)),w.append(RA(),A)}break}case"stop":case"ignored":case"disallowed":w=TA(s.cp),w.title=PA({Type:s.type,Hex:p(s.cp)},o(s.type,[s.cp]));break;default:throw new TypeError(`unknown token type: ${s.type}`)}return w.classList.add(s.type),w}))),s}function SA(){let A=IA("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t\tborder-radius: 5px;\n\t\toverflow: hidden;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a[href]:hover {\n\t\tborder-color: #00f;\n\t}\n\t.tokens .valid {\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tfont-size: 75%;\n\t\tfont-family: monospace;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #c00;\t\n\t\tmin-width: 5px;\n\t\tmin-height: 1em;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t}\n\t.tokens .disallowed.code {\n\t\tfont-size: 75%;\n\t\tbackground: #800;\n\t}\n\t.tokens .disallowed.mod {\n\t\tborder: 2px solid #800;\n\t\tfont-size: 80%;\n\t}\n\t.tokens .disallowed.mod.tag {\n\t\tbackground: #f00;\n\t\tcolor: #000;\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t\ttext-align: center;\n\t\tmin-width: 0.5rem;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t\tbackground: linear-gradient(#fff, #ff0);\n\t\tpadding-bottom: 0;\n\t\tborder: 1px solid #ccc;\n\t}\n\t.tokens .emoji {\n\t\tborder: 2px solid #0aa;\n\t\tbackground: #cff;\n\t\tcolor: #000;\n\t}\n\t.tokens .mod {\n\t\tcolor: #fff;\n\t}\n\t.tokens * .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tborder-radius: 3px;\n\t}\n\t.tokens .emoji .mod {\n\t\tbackground: #333;\n\t}\n\t.tokens .emoji .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag.end {\n\t\tbackground: #066;\n\t}\n\t.tokens .emoji .mod.dropped {\n\t\tbackground: #aaa;\t\t\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t\tuser-select: none;\n\t\tmargin: 0 -2px;\n\t}\n\t.tokens .code {\n\t\tfont-family: monospace;\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #c80;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t\tpadding: 2px;\n\t}",document.body.append(A)}var YA=Object.freeze({__proto__:null,built:"2025-08-02T21:13:53.041Z",cldr:"47 (2025-08-02T20:26:29.295Z)",derived:"2025-08-02T21:06:26.145Z",ens_hash_base64:"38d470dbabd7ab693ea0fb797edad711f34ba50c1e84b4a36ab4b467dfee7ea4",nf_hash_base64:"9ef43cc7215aa7a53e4ed9afa3b4f2f8ce00a2c708b9eb96aa409ae6fa3fb6af",spec_hash:"47ae753bf00f43ada44aaaf0a8b4d2b6a0ae52d06d9d2d73a1cf7755d4be1e31",unicode:"17.0.0 (2025-02-18T17:50:23.577Z)",version:"1.11.1"});export{d as array_replace,C as compare_arrays,UA as dom_from_tokens,uA as ens_beautify,QA as ens_emoji,CA as ens_normalize,BA as ens_normalize_fragment,EA as ens_split,KA as ens_tokenize,Q as explode_cp,p as hex_cp,pA as is_combining_mark,j as nfc,Y as nfd,g as quote_cp,u as random_choice,E as random_sample,h as run_tests,cA as safe_str_from_cps,gA as should_escape,B as str_from_cps,SA as use_default_style,YA as versions};
