var A="";const e=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]),t=4;function r(A){return 1&A?~A>>1:A>>1}function n(A,e){let t=Array(A);for(let n=0,o=0;n<A;n++)t[n]=o+=r(e());return t}function o(A,e=0){let t=[];for(;;){let r=A(),n=A();if(!n)break;e+=r;for(let A=0;A<n;A++)t.push(e+A);e+=n+1}return t}function g(A){let e=[];for(;;){let t=A(e.length);if(!t)break;e.push(t)}return e}function l(A,e,t){let r=Array(A).fill().map((()=>[]));for(let o=0;o<e;o++)n(A,t).forEach(((A,e)=>r[e].push(A)));return r}function i(A,e){let t=1+e(),r=e(),n=g(e);return l(n.length,1+A,e).flatMap(((A,e)=>{let[o,...g]=A;return Array(n[e]).fill().map(((A,e)=>{let n=e*r;return[o+e*t,g.map((A=>A+n))]}))}))}function f(A,e){return l(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}function w(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function s(A){let e=[];for(let t=0,r=A.length;t<r;){let r=A.codePointAt(t);t+=r<65536?1:2,e.push(r)}return e}function C(A){let e=A.length;if(e<4096)return String.fromCodePoint(...A);let t=[];for(let r=0;r<e;)t.push(String.fromCodePoint(...A.slice(r,r+=4096)));return t.join("")}function u(A,e){let t=A.length,r=t-e.length;for(let n=0;0==r&&n<t;n++)r=A[n]-e[n];return r}function B(A,e,t){let r=0;for(;;){let n=A.indexOf(e,r);if(n<0)break;A[n]=t,r=n+1}}function p(A,e){return s(C(A).normalize(e))}function c(A){return p(A,"NFC")}function Q(A){return p(A,"NFD")}const a=45,E=".",h=65039,I=1,D=A=>Array.from(A);function F(A,e){return A.P.has(e)||A.Q.has(e)}class G extends Array{get is_emoji(){return!0}}let K,Y,L,k,J,U,H,O,S,N,V,M;function T(){if(K)return;let e=function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let r=t(),n=1,o=[0,1];for(let A=1;A<r;A++)o.push(n+=t());let g=t(),l=e;e+=g;let i=0,f=0;function w(){return 0==i&&(f=f<<8|A[e++],i=8),f>>--i&1}const s=2**31,C=s>>>1,u=C>>1,B=s-1;let p=0;for(let A=0;A<31;A++)p=p<<1|w();let c=[],Q=0,a=s;for(;;){let A=Math.floor(((p-Q+1)*n-1)/a),e=0,t=r;for(;t-e>1;){let r=e+t>>>1;A<o[r]?t=r:e=r}if(0==e)break;c.push(e);let g=Q+Math.floor(a*o[e]/n),l=Q+Math.floor(a*o[e+1]/n)-1;for(;!((g^l)&C);)p=p<<1&B|w(),g=g<<1&B,l=l<<1&B|1;for(;g&~l&u;)p=p&C|p<<1&B>>>1|w(),g=g<<1^C,l=(l^C)<<1|C|1;Q=g,a=1+l-g}let E=r-4;return c.map((e=>{switch(e-E){case 3:return E+65792+(A[l++]<<16|A[l++]<<8|A[l++]);case 2:return E+256+(A[l++]<<8|A[l++]);case 1:return E+A[l++];default:return e-1}}))}(function(A){let e=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,t)=>e[A.charCodeAt(0)]=t));let t=A.length,r=new Uint8Array(6*t>>3);for(let n=0,o=0,g=0,l=0;n<t;n++)l=l<<6|e[A.charCodeAt(n)],g+=6,g>=8&&(r[o++]=l>>(g-=8));return r}(A)));const t=()=>o(e),r=()=>new Set(t()),n=(A,e)=>e.forEach((e=>A.add(e)));K=new Map(function(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(i(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(f(t,A))}return e.flat()}(e)),Y=r(),L=t(),k=new Set(t().map((A=>L[A]))),L=new Set(L),J=r(),U=r();let l=(w=e,g((()=>{let A=o(w);if(A.length)return A})));var w;let s=e();const B=()=>{let A=new Set;return t().forEach((e=>n(A,l[e]))),n(A,t()),A};H=g((A=>{let t=g(e).map((A=>A+96));if(t.length){let r=A>=s;return t[0]-=32,t=C(t),r&&(t=`Restricted[${t}]`),{N:t,P:B(),Q:B(),M:!e(),R:r}}})),O=r(),S=new Map;let p=t().concat(D(O)).sort(((A,e)=>A-e));p.forEach(((A,t)=>{let r=e(),n=p[t]=r?p[t-r]:{V:[],M:new Map};n.V.push(A),O.has(A)||S.set(A,n)}));for(let{V:A,M:e}of new Set(S.values())){let t=[];for(let e of A){let A=H.filter((A=>F(A,e))),r=t.find((({G:e})=>A.some((A=>e.has(A)))));r||(r={G:new Set,V:[]},t.push(r)),r.V.push(e),n(r.G,A)}let r=t.flatMap((A=>D(A.G)));for(let{G:A,V:n}of t){let t=new Set(r.filter((e=>!A.has(e))));for(let A of n)e.set(A,t)}}N=new Set;let c=new Set;const a=A=>N.has(A)?c.add(A):N.add(A);for(let A of H){for(let e of A.P)a(e);for(let e of A.Q)a(e)}for(let A of N)S.has(A)||c.has(A)||S.set(A,I);n(N,Q(N)),V=function(A){let e=[],t=o(A);return function A({S:t,B:r},n,o){if(!(4&t&&o===n[n.length-1])){2&t&&(o=n[n.length-1]),1&t&&e.push(n);for(let e of r)for(let t of e.Q)A(e,[...n,t],o)}}(function e(r){return{S:A(),B:g((()=>{let r=o(A).map((A=>t[A]));if(r.length)return e(r)})),Q:r}}([]),[]),e}(e).map((A=>G.from(A))).sort(u),M=new Map;for(let A of V){let e=[M];for(let t of A){let A=e.map((A=>{let e=A.get(t);return e||(e=new Map,A.set(t,e)),e}));t===h?e.push(...A):e=A}for(let t of e)t.V=A}}function b(A){return(z(A)?"":`${d(y([A]))} `)+w(A)}function d(A){return`"${A}"‎`}function y(A,e=1/0,t=w){let r=[];m(A[0])&&r.push("◌"),A.length>e&&(e>>=1,A=[...A.slice(0,e),8230,...A.slice(-e)]);let n=0,o=A.length;for(let e=0;e<o;e++){let o=A[e];z(o)&&(r.push(C(A.slice(n,e))),r.push(t(o)),n=e+1)}return r.push(C(A.slice(n,o))),r.join("")}function m(A,e){return T(),e?k.has(A):L.has(A)}function z(A){return T(),J.has(A)}function P(){return T(),V.map((A=>A.slice()))}function W(A,e){T();let t=e?Q:c;return A.split(E).map((A=>C(_(s(A),t,AA).flat()))).join(E)}function Z(A){return j(q(A,c,AA))}function R(A){let e=q(A,c,(A=>A));for(let{type:A,output:t,error:r}of e){if(r)break;"Greek"!==A&&B(t,958,926)}return j(e)}function X(A,e){return q(A,c,e?A=>A.slice():AA)}function q(A,r,n){if(!A)return[];T();let o=0;return A.split(E).map((A=>{let g=s(A),l={input:g,offset:o};o+=g.length+1;try{let A,o=l.tokens=_(g,r,n),i=o.length;if(!i)throw new Error("empty label");let f=l.output=o.flat();if(function(A){for(let e=A.lastIndexOf(95);e>0;)if(95!==A[--e])throw new Error("underscore allowed only at start")}(f),!(l.emoji=i>1||o[0].is_emoji)&&f.every((A=>A<128)))!function(A){if(A.length>=4&&A[2]==a&&A[3]==a)throw new Error(`invalid label extension: "${C(A.slice(0,4))}"`)}(f),A="ASCII";else{let r=o.flatMap((A=>A.is_emoji?[]:A));if(r.length){if(L.has(f[0]))throw $("leading combining mark");for(let A=1;A<i;A++){let e=o[A];if(!e.is_emoji&&L.has(e[0]))throw $(`emoji + combining mark: "${C(o[A-1])} + ${y([e[0]])}"`)}!function(A){let t=A[0],r=e.get(t);if(r)throw $(`leading ${r}`);let n=A.length,o=-1;for(let g=1;g<n;g++){t=A[g];let n=e.get(t);if(n){if(o==g)throw $(`${r} + ${n}`);o=g+1,r=n}}if(o==n)throw $(`trailing ${r}`)}(f);let n=D(new Set(r)),[g]=function(A){let e=H;for(let t of A){let A=e.filter((A=>F(A,t)));if(!A.length)throw H.some((A=>F(A,t)))?v(e[0],t):x(t);if(e=A,1==A.length)break}return e}(n);!function(A,e){for(let t of e)if(!F(A,t))throw v(A,t);if(A.M){let A=Q(e);for(let e=1,r=A.length;e<r;e++)if(k.has(A[e])){let n=e+1;for(let t;n<r&&k.has(t=A[n]);n++)for(let r=e;r<n;r++)if(A[r]==t)throw new Error(`duplicate non-spacing marks: ${b(t)}`);if(n-e>t)throw new Error(`excessive non-spacing marks: ${d(y(A.slice(e-1,n)))} (${n-e}/${t})`);e=n}}}(g,r),function(A,e){let t,r=[];for(let A of e){let e=S.get(A);if(e===I)return;if(e){let r=e.M.get(A);if(t=t?t.filter((A=>r.has(A))):D(r),!t.length)return}else r.push(A)}if(t)for(let e of t)if(r.every((A=>F(e,A))))throw new Error(`whole-script confusable: ${A.N}/${e.N}`)}(g,n),A=g.N}else A="Emoji"}l.type=A}catch(A){l.error=A}return l}))}function j(A){return A.map((({input:e,error:t,output:r})=>{if(t){let r=t.message;throw new Error(1==A.length?r:`Invalid label ${d(y(e,63))}: ${r}`)}return C(r)})).join(E)}function x(A){return new Error(`disallowed character: ${b(A)}`)}function v(A,e){let t=b(e),r=H.find((A=>A.P.has(e)));return r&&(t=`${r.N} ${t}`),new Error(`illegal mixture: ${A.N} + ${t}`)}function $(A){return new Error(`illegal placement: ${A}`)}function _(A,e,t){let r=[],n=[];for(A=A.slice().reverse();A.length;){let o=eA(A);if(o)n.length&&(r.push(e(n)),n=[]),r.push(t(o));else{let e=A.pop();if(N.has(e))n.push(e);else{let A=K.get(e);if(A)n.push(...A);else if(!Y.has(e))throw x(e)}}}return n.length&&r.push(e(n)),r}function AA(A){return A.filter((A=>A!=h))}function eA(A,e){let t,r=M,n=A.length;for(;n&&(r=r.get(A[--n]),r);){let{V:o}=r;o&&(t=o,e&&e.push(...A.slice(n).reverse()),A.length=n)}return t}const tA="valid",rA="mapped",nA="ignored";function oA(A,{nf:e=!0}={}){T();let t=s(A).reverse(),r=[],n=[];for(;t.length;){let A=eA(t,r);if(A)n.push({type:"emoji",emoji:A.slice(),input:r,cps:AA(A)}),r=[];else{let A=t.pop();if(46==A)n.push({type:"stop",cp:A});else if(N.has(A))n.push({type:tA,cps:[A]});else if(Y.has(A))n.push({type:nA,cp:A});else{let e=K.get(A);e?n.push({type:rA,cp:A,cps:e.slice()}):n.push({type:"disallowed",cp:A})}}}if(e)for(let A=0,e=-1;A<n.length;A++){let t=n[A];if(gA(t.type))if(lA(t.cps)){let t=A+1;for(let A=t;A<n.length;A++){let{type:e,cps:r}=n[A];if(gA(e)){if(!lA(r))break;t=A+1}else if(e!==nA)break}e<0&&(e=A);let r=n.slice(e,t),o=r.flatMap((A=>gA(A.type)?A.cps:[])),g=c(o);u(g,o)?(n.splice(e,t-e,{type:"nfc",input:o,cps:g,tokens0:iA(r),tokens:oA(C(g),{nf:!1})}),A=e):A=t-1,e=-1}else e=A;else t.type!==nA&&(e=-1)}return iA(n)}function gA(A){return A==tA||A==rA}function lA(A){return A.some((A=>U.has(A)))}function iA(A){for(let e=0;e<A.length;e++)if(A[e].type==tA){let t=e+1;for(;t<A.length&&A[t].type==tA;)t++;A.splice(e,t-e,{type:tA,cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}export{R as ens_beautify,P as ens_emoji,Z as ens_normalize,W as ens_normalize_fragment,X as ens_split,oA as ens_tokenize,m as is_combining_mark,c as nfc,Q as nfd,y as safe_str_from_cps,z as should_escape};
