var A="";const e=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]),t=4;function r(A){return 1&A?~A>>1:A>>1}function n(A,e){let t=Array(A);for(let n=0,l=0;n<A;n++)t[n]=l+=r(e());return t}function l(A,e=0){let t=[];for(;;){let r=A(),n=A();if(!n)break;e+=r;for(let A=0;A<n;A++)t.push(e+A);e+=n+1}return t}function Q(A){let e=[];for(;;){let t=A(e.length);if(!t)break;e.push(t)}return e}function o(A,e,t){let r=Array(A).fill().map((()=>[]));for(let l=0;l<e;l++)n(A,t).forEach(((A,e)=>r[e].push(A)));return r}function w(A,e){let t=1+e(),r=e(),n=Q(e);return o(n.length,1+A,e).flatMap(((A,e)=>{let[l,...Q]=A;return Array(n[e]).fill().map(((A,e)=>{let n=e*r;return[l+e*t,Q.map((A=>A+n))]}))}))}function c(A,e){return o(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}function f(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function E(A){let e=[];for(let t=0,r=A.length;t<r;){let r=A.codePointAt(t);t+=r<65536?1:2,e.push(r)}return e}function i(A){let e=A.length;if(e<4096)return String.fromCodePoint(...A);let t=[];for(let r=0;r<e;)t.push(String.fromCodePoint(...A.slice(r,r+=4096)));return t.join("")}function s(A,e){let t=A.length,r=t-e.length;for(let n=0;0==r&&n<t;n++)r=A[n]-e[n];return r}function B(A,e,t){let r=0;for(;;){let n=A.indexOf(e,r);if(n<0)break;A[n]=t,r=n+1}}function g(A,e){return E(i(A).normalize(e))}function C(A){return g(A,"NFC")}function u(A){return g(A,"NFD")}const h=45,a=".",p=65039,I=1,D=A=>Array.from(A);function k(A,e){return A.P.has(e)||A.Q.has(e)}class F extends Array{get is_emoji(){return!0}}let U,V,Y,N,L,m,K,y,H,O,P,R;function J(){if(U)return;let e=function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let r=t(),n=1,l=[0,1];for(let A=1;A<r;A++)l.push(n+=t());let Q=t(),o=e;e+=Q;let w=0,c=0;function f(){return 0==w&&(c=c<<8|A[e++],w=8),c>>--w&1}const E=2**31,i=E>>>1,s=i>>1,B=E-1;let g=0;for(let A=0;A<31;A++)g=g<<1|f();let C=[],u=0,h=E;for(;;){let A=Math.floor(((g-u+1)*n-1)/h),e=0,t=r;for(;t-e>1;){let r=e+t>>>1;A<l[r]?t=r:e=r}if(0==e)break;C.push(e);let Q=u+Math.floor(h*l[e]/n),o=u+Math.floor(h*l[e+1]/n)-1;for(;!((Q^o)&i);)g=g<<1&B|f(),Q=Q<<1&B,o=o<<1&B|1;for(;Q&~o&s;)g=g&i|g<<1&B>>>1|f(),Q=Q<<1^i,o=(o^i)<<1|i|1;u=Q,h=1+o-Q}let a=r-4;return C.map((e=>{switch(e-a){case 3:return a+65792+(A[o++]<<16|A[o++]<<8|A[o++]);case 2:return a+256+(A[o++]<<8|A[o++]);case 1:return a+A[o++];default:return e-1}}))}(function(A){let e=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,t)=>e[A.charCodeAt(0)]=t));let t=A.length,r=new Uint8Array(6*t>>3);for(let n=0,l=0,Q=0,o=0;n<t;n++)o=o<<6|e[A.charCodeAt(n)],Q+=6,Q>=8&&(r[l++]=o>>(Q-=8));return r}(A)));const t=()=>l(e),r=()=>new Set(t()),n=(A,e)=>e.forEach((e=>A.add(e)));U=new Map(function(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(w(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(c(t,A))}return e.flat()}(e)),V=r(),Y=t(),N=new Set(t().map((A=>Y[A]))),Y=new Set(Y),L=r(),m=r();let o=(f=e,Q((()=>{let A=l(f);if(A.length)return A})));var f;let E=e();const B=()=>{let A=new Set;return t().forEach((e=>n(A,o[e]))),n(A,t()),A};K=Q((A=>{let t=Q(e).map((A=>A+96));if(t.length){let r=A>=E;return t[0]-=32,t=i(t),r&&(t=`Restricted[${t}]`),{N:t,P:B(),Q:B(),M:!e(),R:r}}})),y=r(),H=new Map;let g=t().concat(D(y)).sort(((A,e)=>A-e));g.forEach(((A,t)=>{let r=e(),n=g[t]=r?g[t-r]:{V:[],M:new Map};n.V.push(A),y.has(A)||H.set(A,n)}));for(let{V:A,M:e}of new Set(H.values())){let t=[];for(let e of A){let A=K.filter((A=>k(A,e))),r=t.find((({G:e})=>A.some((A=>e.has(A)))));r||(r={G:new Set,V:[]},t.push(r)),r.V.push(e),n(r.G,A)}let r=t.flatMap((A=>D(A.G)));for(let{G:A,V:n}of t){let t=new Set(r.filter((e=>!A.has(e))));for(let A of n)e.set(A,t)}}O=new Set;let C=new Set;const h=A=>O.has(A)?C.add(A):O.add(A);for(let A of K){for(let e of A.P)h(e);for(let e of A.Q)h(e)}for(let A of O)H.has(A)||C.has(A)||H.set(A,I);n(O,u(O)),P=function(A){let e=[],t=l(A);return function A({S:t,B:r},n,l){if(!(4&t&&l===n[n.length-1])){2&t&&(l=n[n.length-1]),1&t&&e.push(n);for(let e of r)for(let t of e.Q)A(e,[...n,t],l)}}(function e(r){return{S:A(),B:Q((()=>{let r=l(A).map((A=>t[A]));if(r.length)return e(r)})),Q:r}}([]),[]),e}(e).map((A=>F.from(A))).sort(s),R=new Map;for(let A of P){let e=[R];for(let t of A){let A=e.map((A=>{let e=A.get(t);return e||(e=new Map,A.set(t,e)),e}));t===p?e.push(...A):e=A}for(let t of e)t.V=A}}function M(A){return(b(A)?"":`${G(z([A]))} `)+f(A)}function G(A){return`"${A}"‎`}function z(A,e=1/0,t=f){let r=[];S(A[0])&&r.push("◌"),A.length>e&&(e>>=1,A=[...A.slice(0,e),8230,...A.slice(-e)]);let n=0,l=A.length;for(let e=0;e<l;e++){let l=A[e];b(l)&&(r.push(i(A.slice(n,e))),r.push(t(l)),n=e+1)}return r.push(i(A.slice(n,l))),r.join("")}function S(A,e){return J(),e?N.has(A):Y.has(A)}function b(A){return J(),L.has(A)}function x(){return J(),P.map((A=>A.slice()))}function d(A,e){J();let t=e?u:C;return A.split(a).map((A=>i(_(E(A),t,AA).flat()))).join(a)}function v(A){return T(Z(A,C,AA))}function j(A){let e=Z(A,C,(A=>A));for(let{type:A,output:t,error:r}of e){if(r)break;"Greek"!==A&&B(t,958,926)}return T(e)}function X(A,e){return Z(A,C,e?A=>A.slice():AA)}function Z(A,r,n){if(!A)return[];J();let l=0;return A.split(a).map((A=>{let Q=E(A),o={input:Q,offset:l};l+=Q.length+1;try{let A,l=o.tokens=_(Q,r,n),w=l.length;if(!w)throw new Error("empty label");let c=o.output=l.flat();if(function(A){for(let e=A.lastIndexOf(95);e>0;)if(95!==A[--e])throw new Error("underscore allowed only at start")}(c),!(o.emoji=w>1||l[0].is_emoji)&&c.every((A=>A<128)))!function(A){if(A.length>=4&&A[2]==h&&A[3]==h)throw new Error(`invalid label extension: "${i(A.slice(0,4))}"`)}(c),A="ASCII";else{let r=l.flatMap((A=>A.is_emoji?[]:A));if(r.length){if(Y.has(c[0]))throw $("leading combining mark");for(let A=1;A<w;A++){let e=l[A];if(!e.is_emoji&&Y.has(e[0]))throw $(`emoji + combining mark: "${i(l[A-1])} + ${z([e[0]])}"`)}!function(A){let t=A[0],r=e.get(t);if(r)throw $(`leading ${r}`);let n=A.length,l=-1;for(let Q=1;Q<n;Q++){t=A[Q];let n=e.get(t);if(n){if(l==Q)throw $(`${r} + ${n}`);l=Q+1,r=n}}if(l==n)throw $(`trailing ${r}`)}(c);let n=D(new Set(r)),[Q]=function(A){let e=K;for(let t of A){let A=e.filter((A=>k(A,t)));if(!A.length)throw K.some((A=>k(A,t)))?q(e[0],t):W(t);if(e=A,1==A.length)break}return e}(n);!function(A,e){for(let t of e)if(!k(A,t))throw q(A,t);if(A.M){let A=u(e);for(let e=1,r=A.length;e<r;e++)if(N.has(A[e])){let n=e+1;for(let t;n<r&&N.has(t=A[n]);n++)for(let r=e;r<n;r++)if(A[r]==t)throw new Error(`duplicate non-spacing marks: ${M(t)}`);if(n-e>t)throw new Error(`excessive non-spacing marks: ${G(z(A.slice(e-1,n)))} (${n-e}/${t})`);e=n}}}(Q,r),function(A,e){let t,r=[];for(let A of e){let e=H.get(A);if(e===I)return;if(e){let r=e.M.get(A);if(t=t?t.filter((A=>r.has(A))):D(r),!t.length)return}else r.push(A)}if(t)for(let e of t)if(r.every((A=>k(e,A))))throw new Error(`whole-script confusable: ${A.N}/${e.N}`)}(Q,n),A=Q.N}else A="Emoji"}o.type=A}catch(A){o.error=A}return o}))}function T(A){return A.map((({input:e,error:t,output:r})=>{if(t){let r=t.message;throw new Error(1==A.length?r:`Invalid label ${G(z(e,63))}: ${r}`)}return i(r)})).join(a)}function W(A){return new Error(`disallowed character: ${M(A)}`)}function q(A,e){let t=M(e),r=K.find((A=>A.P.has(e)));return r&&(t=`${r.N} ${t}`),new Error(`illegal mixture: ${A.N} + ${t}`)}function $(A){return new Error(`illegal placement: ${A}`)}function _(A,e,t){let r=[],n=[];for(A=A.slice().reverse();A.length;){let l=eA(A);if(l)n.length&&(r.push(e(n)),n=[]),r.push(t(l));else{let e=A.pop();if(O.has(e))n.push(e);else{let A=U.get(e);if(A)n.push(...A);else if(!V.has(e))throw W(e)}}}return n.length&&r.push(e(n)),r}function AA(A){return A.filter((A=>A!=p))}function eA(A,e){let t,r=R,n=A.length;for(;n&&(r=r.get(A[--n]),r);){let{V:l}=r;l&&(t=l,e&&e.push(...A.slice(n).reverse()),A.length=n)}return t}const tA="valid",rA="mapped",nA="ignored";function lA(A,{nf:e=!0}={}){J();let t=E(A).reverse(),r=[],n=[];for(;t.length;){let A=eA(t,r);if(A)n.push({type:"emoji",emoji:A.slice(),input:r,cps:AA(A)}),r=[];else{let A=t.pop();if(46==A)n.push({type:"stop",cp:A});else if(O.has(A))n.push({type:tA,cps:[A]});else if(V.has(A))n.push({type:nA,cp:A});else{let e=U.get(A);e?n.push({type:rA,cp:A,cps:e.slice()}):n.push({type:"disallowed",cp:A})}}}if(e)for(let A=0,e=-1;A<n.length;A++){let t=n[A];if(QA(t.type))if(oA(t.cps)){let t=A+1;for(let A=t;A<n.length;A++){let{type:e,cps:r}=n[A];if(QA(e)){if(!oA(r))break;t=A+1}else if(e!==nA)break}e<0&&(e=A);let r=n.slice(e,t),l=r.flatMap((A=>QA(A.type)?A.cps:[])),Q=C(l);s(Q,l)?(n.splice(e,t-e,{type:"nfc",input:l,cps:Q,tokens0:wA(r),tokens:lA(i(Q),{nf:!1})}),A=e):A=t-1,e=-1}else e=A;else t.type!==nA&&(e=-1)}return wA(n)}function QA(A){return A==tA||A==rA}function oA(A){return A.some((A=>m.has(A)))}function wA(A){for(let e=0;e<A.length;e++)if(A[e].type==tA){let t=e+1;for(;t<A.length&&A[t].type==tA;)t++;A.splice(e,t-e,{type:tA,cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}export{j as ens_beautify,x as ens_emoji,v as ens_normalize,d as ens_normalize_fragment,X as ens_split,lA as ens_tokenize,S as is_combining_mark,C as nfc,u as nfd,z as safe_str_from_cps,b as should_escape};
