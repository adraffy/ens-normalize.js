var A="";const e=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]),t=4;function n(A){return function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let n=t(),r=1,w=[0,1];for(let A=1;A<n;A++)w.push(r+=t());let l=t(),s=e;e+=l;let o=0,Q=0;function C(){return 0==o&&(Q=Q<<8|A[e++],o=8),Q>>--o&1}const B=2**31,c=B>>>1,f=c>>1,g=B-1;let u=0;for(let A=0;A<31;A++)u=u<<1|C();let i=[],E=0,a=B;for(;;){let A=Math.floor(((u-E+1)*r-1)/a),e=0,t=n;for(;t-e>1;){let n=e+t>>>1;A<w[n]?t=n:e=n}if(0==e)break;i.push(e);let l=E+Math.floor(a*w[e]/r),s=E+Math.floor(a*w[e+1]/r)-1;for(;!((l^s)&c);)u=u<<1&g|C(),l=l<<1&g,s=s<<1&g|1;for(;l&~s&f;)u=u&c|u<<1&g>>>1|C(),l=l<<1^c,s=(s^c)<<1|c|1;E=l,a=1+s-l}let D=n-4;return i.map((e=>{switch(e-D){case 3:return D+65792+(A[s++]<<16|A[s++]<<8|A[s++]);case 2:return D+256+(A[s++]<<8|A[s++]);case 1:return D+A[s++];default:return e-1}}))}(function(A){let e=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,t)=>e[A.charCodeAt(0)]=t));let t=A.length,n=new Uint8Array(6*t>>3);for(let r=0,w=0,l=0,s=0;r<t;r++)s=s<<6|e[A.charCodeAt(r)],l+=6,l>=8&&(n[w++]=s>>(l-=8));return n}(A)))}function r(A){return 1&A?~A>>1:A>>1}function w(A,e){let t=Array(A);for(let n=0,w=0;n<A;n++)t[n]=w+=r(e());return t}function l(A,e=0){let t=[];for(;;){let n=A(),r=A();if(!r)break;e+=n;for(let A=0;A<r;A++)t.push(e+A);e+=r+1}return t}function s(A){return Q((()=>{let e=l(A);if(e.length)return e}))}function o(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(B(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(c(t,A))}return e.flat()}function Q(A){let e=[];for(;;){let t=A(e.length);if(!t)break;e.push(t)}return e}function C(A,e,t){let n=Array(A).fill().map((()=>[]));for(let r=0;r<e;r++)w(A,t).forEach(((A,e)=>n[e].push(A)));return n}function B(A,e){let t=1+e(),n=e(),r=Q(e);return C(r.length,1+A,e).flatMap(((A,e)=>{let[w,...l]=A;return Array(r[e]).fill().map(((A,e)=>{let r=e*n;return[w+e*t,l.map((A=>A+r))]}))}))}function c(A,e){return C(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}function f(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function g(A){let e=[];for(let t=0,n=A.length;t<n;){let n=A.codePointAt(t);t+=n<65536?1:2,e.push(n)}return e}function u(A){let e=A.length;if(e<4096)return String.fromCodePoint(...A);let t=[];for(let n=0;n<e;)t.push(String.fromCodePoint(...A.slice(n,n+=4096)));return t.join("")}function i(A,e){let t=A.length,n=t-e.length;for(let r=0;0==n&&r<t;r++)n=A[r]-e[r];return n}function E(A,e,t){let n=0;for(;;){let r=A.indexOf(e,n);if(r<0)break;A[r]=t,n=r+1}}var a="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";const D=44032,p=4352,M=4449,F=4519,h=28,U=21*h,J=D+19*U,k=p+19,I=M+21,H=F+h;function L(A){return A>>24&255}function b(A){return 16777215&A}let R,x,K,G;function d(A){return A>=D&&A<J}function y(A,e){if(A>=p&&A<k&&e>=M&&e<I)return D+(A-p)*U+(e-M)*h;if(d(A)&&e>F&&e<H&&(A-D)%h==0)return A+(e-F);{let t=G.get(A);return t&&(t=t.get(e),t)?t:-1}}function P(A){R||function(){let A=n(a);R=new Map(s(A).flatMap(((A,e)=>A.map((A=>[A,e+1<<24]))))),x=new Set(l(A)),K=new Map,G=new Map;for(let[e,t]of o(A)){if(!x.has(e)&&2==t.length){let[A,n]=t,r=G.get(A);r||(r=new Map,G.set(A,r)),r.set(n,e)}K.set(e,t.reverse())}}();let e=[],t=[],r=!1;function w(A){let t=R.get(A);t&&(r=!0,A|=t),e.push(A)}for(let n of A)for(;;){if(n<128)e.push(n);else if(d(n)){let A=n-D,e=A%U/h|0,t=A%h;w(p+(A/U|0)),w(M+e),t>0&&w(F+t)}else{let A=K.get(n);A?t.push(...A):w(n)}if(!t.length)break;n=t.pop()}if(r&&e.length>1){let A=L(e[0]);for(let t=1;t<e.length;t++){let n=L(e[t]);if(0==n||A<=n){A=n;continue}let r=t-1;for(;;){let t=e[r+1];if(e[r+1]=e[r],e[r]=t,!r)break;if(A=L(e[--r]),A<=n)break}A=L(e[t])}}return e}function S(A){return P(A).map(b)}function V(A){return function(A){let e=[],t=[],n=-1,r=0;for(let w of A){let A=L(w),l=b(w);if(-1==n)0==A?n=l:e.push(l);else if(r>0&&r>=A)0==A?(e.push(n,...t),t.length=0,n=l):t.push(l),r=A;else{let w=y(n,l);w>=0?n=w:0==r&&0==A?(e.push(n),n=l):(t.push(l),r=A)}}return n>=0&&e.push(n,...t),e}(P(A))}const Y=45,O=".",m=65039,T=1,N=A=>Array.from(A);function q(A,e){return A.P.has(e)||A.Q.has(e)}class z extends Array{get is_emoji(){return!0}}let X,j,v,W,Z,$,_,AA,eA,tA,nA,rA;function wA(){if(X)return;let e=n(A);const t=()=>l(e),r=()=>new Set(t()),w=(A,e)=>e.forEach((e=>A.add(e)));X=new Map(o(e)),j=r(),v=t(),W=new Set(t().map((A=>v[A]))),v=new Set(v),Z=r(),$=r();let C=s(e),B=e();const c=()=>{let A=new Set;return t().forEach((e=>w(A,C[e]))),w(A,t()),A};_=Q((A=>{let t=Q(e).map((A=>A+96));if(t.length){let n=A>=B;return t[0]-=32,t=u(t),n&&(t=`Restricted[${t}]`),{N:t,P:c(),Q:c(),M:!e(),R:n}}})),AA=r(),eA=new Map;let f=t().concat(N(AA)).sort(((A,e)=>A-e));f.forEach(((A,t)=>{let n=e(),r=f[t]=n?f[t-n]:{V:[],M:new Map};r.V.push(A),AA.has(A)||eA.set(A,r)}));for(let{V:A,M:e}of new Set(eA.values())){let t=[];for(let e of A){let A=_.filter((A=>q(A,e))),n=t.find((({G:e})=>A.some((A=>e.has(A)))));n||(n={G:new Set,V:[]},t.push(n)),n.V.push(e),w(n.G,A)}let n=t.flatMap((A=>N(A.G)));for(let{G:A,V:r}of t){let t=new Set(n.filter((e=>!A.has(e))));for(let A of r)e.set(A,t)}}tA=new Set;let g=new Set;const E=A=>tA.has(A)?g.add(A):tA.add(A);for(let A of _){for(let e of A.P)E(e);for(let e of A.Q)E(e)}for(let A of tA)eA.has(A)||g.has(A)||eA.set(A,T);w(tA,S(tA)),nA=function(A){let e=[],t=l(A);return function A({S:t,B:n},r,w){if(!(4&t&&w===r[r.length-1])){2&t&&(w=r[r.length-1]),1&t&&e.push(r);for(let e of n)for(let t of e.Q)A(e,[...r,t],w)}}(function e(n){return{S:A(),B:Q((()=>{let n=l(A).map((A=>t[A]));if(n.length)return e(n)})),Q:n}}([]),[]),e}(e).map((A=>z.from(A))).sort(i),rA=new Map;for(let A of nA){let e=[rA];for(let t of A){let A=e.map((A=>{let e=A.get(t);return e||(e=new Map,A.set(t,e)),e}));t===m?e.push(...A):e=A}for(let t of e)t.V=A}}function lA(A){return(CA(A)?"":`${sA(oA([A]))} `)+f(A)}function sA(A){return`"${A}"‎`}function oA(A,e=1/0,t=f){let n=[];QA(A[0])&&n.push("◌"),A.length>e&&(e>>=1,A=[...A.slice(0,e),8230,...A.slice(-e)]);let r=0,w=A.length;for(let e=0;e<w;e++){let w=A[e];CA(w)&&(n.push(u(A.slice(r,e))),n.push(t(w)),r=e+1)}return n.push(u(A.slice(r,w))),n.join("")}function QA(A,e){return wA(),e?W.has(A):v.has(A)}function CA(A){return wA(),Z.has(A)}function BA(){return wA(),nA.map((A=>A.slice()))}function cA(A,e){wA();let t=e?S:V;return A.split(O).map((A=>u(MA(g(A),t,FA).flat()))).join(O)}function fA(A){return EA(iA(A,V,FA))}function gA(A){let e=iA(A,V,(A=>A));for(let{type:A,output:t,error:n}of e){if(n)break;"Greek"!==A&&E(t,958,926)}return EA(e)}function uA(A,e){return iA(A,V,e?A=>A.slice():FA)}function iA(A,n,r){if(!A)return[];wA();let w=0;return A.split(O).map((A=>{let l=g(A),s={input:l,offset:w};w+=l.length+1;try{let A,w=s.tokens=MA(l,n,r),o=w.length;if(!o)throw new Error("empty label");let Q=s.output=w.flat();if(function(A){for(let e=A.lastIndexOf(95);e>0;)if(95!==A[--e])throw new Error("underscore allowed only at start")}(Q),!(s.emoji=o>1||w[0].is_emoji)&&Q.every((A=>A<128)))!function(A){if(A.length>=4&&A[2]==Y&&A[3]==Y)throw new Error(`invalid label extension: "${u(A.slice(0,4))}"`)}(Q),A="ASCII";else{let n=w.flatMap((A=>A.is_emoji?[]:A));if(n.length){if(v.has(Q[0]))throw pA("leading combining mark");for(let A=1;A<o;A++){let e=w[A];if(!e.is_emoji&&v.has(e[0]))throw pA(`emoji + combining mark: "${u(w[A-1])} + ${oA([e[0]])}"`)}!function(A){let t=A[0],n=e.get(t);if(n)throw pA(`leading ${n}`);let r=A.length,w=-1;for(let l=1;l<r;l++){t=A[l];let r=e.get(t);if(r){if(w==l)throw pA(`${n} + ${r}`);w=l+1,n=r}}if(w==r)throw pA(`trailing ${n}`)}(Q);let r=N(new Set(n)),[l]=function(A){let e=_;for(let t of A){let A=e.filter((A=>q(A,t)));if(!A.length)throw _.some((A=>q(A,t)))?DA(e[0],t):aA(t);if(e=A,1==A.length)break}return e}(r);!function(A,e){for(let t of e)if(!q(A,t))throw DA(A,t);if(A.M){let A=S(e);for(let e=1,n=A.length;e<n;e++)if(W.has(A[e])){let r=e+1;for(let t;r<n&&W.has(t=A[r]);r++)for(let n=e;n<r;n++)if(A[n]==t)throw new Error(`duplicate non-spacing marks: ${lA(t)}`);if(r-e>t)throw new Error(`excessive non-spacing marks: ${sA(oA(A.slice(e-1,r)))} (${r-e}/${t})`);e=r}}}(l,n),function(A,e){let t,n=[];for(let A of e){let e=eA.get(A);if(e===T)return;if(e){let n=e.M.get(A);if(t=t?t.filter((A=>n.has(A))):N(n),!t.length)return}else n.push(A)}if(t)for(let e of t)if(n.every((A=>q(e,A))))throw new Error(`whole-script confusable: ${A.N}/${e.N}`)}(l,r),A=l.N}else A="Emoji"}s.type=A}catch(A){s.error=A}return s}))}function EA(A){return A.map((({input:e,error:t,output:n})=>{if(t){let n=t.message;throw new Error(1==A.length?n:`Invalid label ${sA(oA(e,63))}: ${n}`)}return u(n)})).join(O)}function aA(A){return new Error(`disallowed character: ${lA(A)}`)}function DA(A,e){let t=lA(e),n=_.find((A=>A.P.has(e)));return n&&(t=`${n.N} ${t}`),new Error(`illegal mixture: ${A.N} + ${t}`)}function pA(A){return new Error(`illegal placement: ${A}`)}function MA(A,e,t){let n=[],r=[];for(A=A.slice().reverse();A.length;){let w=hA(A);if(w)r.length&&(n.push(e(r)),r=[]),n.push(t(w));else{let e=A.pop();if(tA.has(e))r.push(e);else{let A=X.get(e);if(A)r.push(...A);else if(!j.has(e))throw aA(e)}}}return r.length&&n.push(e(r)),n}function FA(A){return A.filter((A=>A!=m))}function hA(A,e){let t,n=rA,r=A.length;for(;r&&(n=n.get(A[--r]),n);){let{V:w}=n;w&&(t=w,e&&e.push(...A.slice(r).reverse()),A.length=r)}return t}const UA="valid",JA="mapped",kA="ignored";function IA(A,{nf:e=!0}={}){wA();let t=g(A).reverse(),n=[],r=[];for(;t.length;){let A=hA(t,n);if(A)r.push({type:"emoji",emoji:A.slice(),input:n,cps:FA(A)}),n=[];else{let A=t.pop();if(46==A)r.push({type:"stop",cp:A});else if(tA.has(A))r.push({type:UA,cps:[A]});else if(j.has(A))r.push({type:kA,cp:A});else{let e=X.get(A);e?r.push({type:JA,cp:A,cps:e.slice()}):r.push({type:"disallowed",cp:A})}}}if(e)for(let A=0,e=-1;A<r.length;A++){let t=r[A];if(HA(t.type))if(LA(t.cps)){let t=A+1;for(let A=t;A<r.length;A++){let{type:e,cps:n}=r[A];if(HA(e)){if(!LA(n))break;t=A+1}else if(e!==kA)break}e<0&&(e=A);let n=r.slice(e,t),w=n.flatMap((A=>HA(A.type)?A.cps:[])),l=V(w);i(l,w)?(r.splice(e,t-e,{type:"nfc",input:w,cps:l,tokens0:bA(n),tokens:IA(u(l),{nf:!1})}),A=e):A=t-1,e=-1}else e=A;else t.type!==kA&&(e=-1)}return bA(r)}function HA(A){return A==UA||A==JA}function LA(A){return A.some((A=>$.has(A)))}function bA(A){for(let e=0;e<A.length;e++)if(A[e].type==UA){let t=e+1;for(;t<A.length&&A[t].type==UA;)t++;A.splice(e,t-e,{type:UA,cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}export{gA as ens_beautify,BA as ens_emoji,fA as ens_normalize,cA as ens_normalize_fragment,uA as ens_split,IA as ens_tokenize,QA as is_combining_mark,V as nfc,S as nfd,oA as safe_str_from_cps,CA as should_escape};
